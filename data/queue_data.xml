<odoo noupdate="0">
    <!-- Template email pour notification -->
    <record id="email_ticket_called" model="mail.template">
        <field name="name">Notification Ticket Appelé</field>
        <field name="model_id" ref="model_queue_ticket" />
        <field name="subject">Votre ticket est appelé - ${object.service_id.name}</field>
        <field name="email_from">${(object.service_id.company_id.email or '')|safe}</field>
        <field name="email_to">${object.customer_email}</field>
        <field name="body_html" type="html">
            <div style="margin: 0px; padding: 0px;">
                <p>Bonjour,</p>
                <p>Votre ticket <strong>#${object.ticket_number}</strong> pour le service <strong>
                    ${object.service_id.name}</strong> est maintenant appelé.</p>
                <p>Veuillez vous présenter au guichet.</p>
                <br />
                <p>Merci de votre patience.</p>
            </div>
        </field>
    </record>

    <!-- Séquence pour les numéros de tickets -->
    <record id="seq_queue_ticket" model="ir.sequence">
        <field name="name">Numéro de Ticket File d'Attente</field>
        <field name="code">queue.ticket.number</field>
        <field name="padding">3</field>
        <field name="number_next">1</field>
        <field name="number_increment">1</field>
        <field name="use_date_range">True</field>
    </record>

    <!-- Actions plannifiées -->
    <record id="ir_cron_cleanup_old_tickets" model="ir.cron">
        <field name="name">Nettoyage des anciens tickets</field>
        <field name="model_id" ref="model_queue_ticket" />
        <field name="state">code</field>
        <field name="code">
# Supprimer les tickets de plus de 30 jours
cutoff_date = fields.Datetime.now() - timedelta(days=30)
old_tickets = model.search([('create_date', '&lt;', cutoff_date)])
old_tickets.unlink()
        </field>
        <field name="interval_number">1</field>
        <field name="interval_type">days</field>
        <field name="numbercall">-1</field>
        <field name="doall" eval="False" />
    </record>

    <!-- Configuration par défaut -->
    <!-- Default Queue Configuration -->
    <record id="default_queue_config" model="queue.config">
        <field name="name">Configuration Système</field>
        <field name="enable_email_notifications" eval="True"/>
        <field name="enable_sms_notifications" eval="False"/>
        <field name="dashboard_refresh_interval">30</field>
        <field name="show_estimated_times" eval="True"/>
        <field name="show_customer_names" eval="True"/>
        <field name="allow_ticket_cancellation" eval="True"/>
        <field name="require_customer_info" eval="False"/>
        <field name="cache_duration">30</field>
        <field name="auto_cleanup_enabled" eval="True"/>
        <field name="cleanup_days_to_keep">30</field>
        <field name="max_waiting_alert">15</field>
        <field name="long_service_alert">30</field>
        <field name="show_statistics" eval="True"/>
        <field name="enable_feedback" eval="True"/>
    </record>

    <!-- Tâche cron pour la maintenance automatique -->
    <record id="cron_queue_daily_maintenance" model="ir.cron">
        <field name="name">Queue Management - Maintenance Quotidienne</field>
        <field name="model_id" ref="model_queue_service" />
        <field name="state">code</field>
        <field name="code">model.scheduled_data_maintenance()</field>
        <field name="interval_number">1</field>
        <field name="interval_type">days</field>
        <field name="nextcall"
            eval="(DateTime.now() + timedelta(days=1)).replace(hour=2, minute=0, second=0)" />
        <field name="active">True</field>
    </record>

    <!-- Tâche cron pour la réinitialisation des compteurs -->
    <record id="cron_queue_reset_counters" model="ir.cron">
        <field name="name">Queue Management - Réinitialisation Compteurs</field>
        <field name="model_id" ref="model_queue_service" />
        <field name="state">code</field>
        <field name="code">model.reset_daily_counters()</field>
        <field name="interval_number">1</field>
        <field name="interval_type">days</field>
        <field name="nextcall"
            eval="(DateTime.now() + timedelta(days=1)).replace(hour=0, minute=0, second=0)" />
        <field name="active">True</field>
    </record>

    <!-- Tâche cron pour le nettoyage hebdomadaire -->
    <record id="cron_queue_weekly_cleanup" model="ir.cron">
        <field name="name">Queue Management - Nettoyage Hebdomadaire</field>
        <field name="model_id" ref="model_queue_service" />
        <field name="state">code</field>
        <field name="code">model.cleanup_old_data(days_to_keep=30)</field>
        <field name="interval_number">1</field>
        <field name="interval_type">weeks</field>
        <field name="nextcall"
            eval="(DateTime.now() + timedelta(weeks=1)).replace(hour=1, minute=0, second=0)" />
        <field name="active">True</field>
    </record>

    <!-- ========== AUTOMATED ACTIONS ========== -->

    <!-- Automated Action for Daily Metrics Collection -->
    <record id="ir_cron_collect_daily_metrics" model="ir.cron">
        <field name="name">Collecte des Métriques Quotidiennes</field>
        <field name="model_id" ref="model_queue_performance_metrics" />
        <field name="state">code</field>
        <field name="code">model.collect_daily_metrics()</field>
        <field name="interval_number">1</field>
        <field name="interval_type">days</field>
        <field name="numbercall">-1</field>
        <field name="active">True</field>
        <field name="doall">False</field>
        <field name="nextcall"
            eval="(datetime.now() + timedelta(days=1)).replace(hour=1, minute=0, second=0)" />
    </record>

    <!-- Automated Action for System Alerts Check -->
    <record id="ir_cron_check_system_alerts" model="ir.cron">
        <field name="name">Vérification des Alertes Système</field>
        <field name="model_id" ref="model_queue_system_alerts" />
        <field name="state">code</field>
        <field name="code">model.check_system_alerts()</field>
        <field name="interval_number">15</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">-1</field>
        <field name="active">True</field>
        <field name="doall">False</field>
    </record>

    <!-- Cron jobs pour maintenance automatique -->
    <record id="cron_daily_stats_cleanup" model="ir.cron">
        <field name="name">Nettoyage Statistiques Anciennes</field>
        <field name="model_id" ref="model_queue_service"/>
        <field name="state">code</field>
        <field name="code">model.cleanup_old_statistics()</field>
        <field name="interval_number">1</field>
        <field name="interval_type">days</field>
        <field name="numbercall">-1</field>
        <field name="active" eval="True"/>
        <field name="doall" eval="False"/>
    </record>

    <record id="cron_performance_report" model="ir.cron">
        <field name="name">Rapport Performance Hebdomadaire</field>
        <field name="model_id" ref="model_queue_service"/>
        <field name="state">code</field>
        <field name="code">
# Génération du rapport hebdomadaire
services = model.search([('active', '=', True)])
report_data = model.generate_performance_report()

# Envoi par email aux managers (si configuré)
managers = env.ref('queue_management.group_queue_manager').users
for manager in managers:
    if manager.email:
        # Logique d'envoi de rapport par email
        pass

_logger.info("Rapport de performance hebdomadaire généré")
        </field>
        <field name="interval_number">1</field>
        <field name="interval_type">weeks</field>
        <field name="numbercall">-1</field>
        <field name="nextcall" eval="(DateTime.now() + timedelta(weeks=1)).replace(hour=8, minute=0, second=0)"/>
        <field name="active" eval="True"/>
        <field name="doall" eval="False"/>
    </record>

    <record id="cron_auto_cancel_timeout_tickets" model="ir.cron">
        <field name="name">Timeout des tickets appelés</field>
        <field name="model_id" ref="model_queue_ticket"/>
        <field name="state">code</field>
        <field name="code">model.auto_cancel_timeout_tickets()</field>
        <field name="interval_number">5</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">-1</field>
        <field name="active" eval="True"/>
    </record>

    <record id="ir_cron_cleanup_old_tickets" model="ir.cron">
        <field name="name">Nettoyage des anciens tickets</field>
        <field name="model_id" ref="model_queue_ticket"/>
        <field name="state">code</field>
        <field name="code">model.scheduled_cleanup_and_maintenance()</field>
        <field name="interval_number">1</field>
        <field name="interval_type">days</field>
        <field name="numbercall">-1</field>
        <field name="doall" eval="False"/>
        <field name="active" eval="True"/>
    </record>

    <record id="ir_cron_update_estimated_times" model="ir.cron">
        <field name="name">Mise à jour temps d'attente estimés</field>
        <field name="model_id" ref="model_queue_ticket"/>
        <field name="state">code</field>
        <field name="code">model.scheduled_update_estimated_times()</field>
        <field name="interval_number">2</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">-1</field>
        <field name="doall" eval="False"/>
        <field name="active" eval="True"/>
    </record>

    <record id="cron_ticket_number_maintenance" model="ir.cron">
        <field name="name">Maintenance numérotation tickets</field>
        <field name="model_id" ref="model_queue_service"/>
        <field name="state">code</field>
        <field name="code">model.scheduled_ticket_number_maintenance()</field>
        <field name="interval_number">1</field>
        <field name="interval_type">days</field>
        <field name="numbercall">-1</field>
        <field name="doall">False</field>
        <field name="active">True</field>
    </record>
</odoo>